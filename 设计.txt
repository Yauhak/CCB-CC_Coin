交易过程：

1.	   交易终端发起交易申请
		 ↓  ↓  ↓  ↓  ↓ ...
各节点   1  2  3  4  5 ...

交易终端向各节点广播交易请求，广播格式为 EXM_SIGN:[发起账号(哈希)]:[加密后的签名]:[明文签名]
其中签名格式为 转账方(哈希)|接受方(哈希)|金额|时间戳(UNIX)|订单号
发起申请后，每个节点将该交易归入待交易池，将交易请求中的签名作为此次交易的指纹

2.			交易终端
		 ↑  ↑  ↑  ↑  ↑ ...
各节点   1  2  3  4  5 ...  返回投票结果

各节点分别给出自己的投票，评判是否支持这场交易，并将结果返回给交易终端
交易终端在此时会统计各节点的投票结果，如果支持率超过2/3则交易资格审定通过，否则失败
此时交易并未完全结束，因为各节点的账本还没有更新

3.	        交易终端    请求各节点交换投票节点并决定是否修改账本
		 ↓  ↓  ↓  ↓  ↓ ...
各节点   1  2  3  4  5 ...
互相交换	  →  →  →  →
投票结果   ←  ←  ←  ←

交易终端向各节点广播投票公开请求，在公开过程中，每个节点实际上是全连接的
每个节点分别从除自己之外的所有节点申请获取其投票结果并进行统计
如果支持率超过2/3则更改存储于本地的账本信息，无论自己是否支持(少数服从多数)

----------------------------------------------------------------------------------------

挖矿过程：

1.	        交易终端  发送自己挖掘出来的mine_number
		 ↓  ↓  ↓  ↓  ↓ ...
各节点   1  2  3  4  5 ...

交易终端向所有节点发布自己挖掘出来的矿（特定数字），让各节点评判这个矿是否有价值

2.   各节点   N → 检查账户信息 → 检查该mine_number是否已被挖掘过（从历史交易中查看）
			   → 检查该mine_number是否满足要求 → 更改本地账本信息

如果身份验证通过，并且这确实是崭新的矿，那么每个节点更改本地账本信息，该账户持有CC币+1
对于挖矿成功而获得一枚CC币，视为哈希为mine_number的账号（即矿源这个本体）支付给该账号的奖励
由于真实存在的哈希值不可能出现小数，并且mine_number也很难再次复现，基本可视为一次性的
所以账本用该数字作为“支付方”账户哈希不仅可以表示这枚CC币的来源（挖矿）
还可以防止利用重复的mine_number刷钱